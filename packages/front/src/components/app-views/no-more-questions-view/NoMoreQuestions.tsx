import React, { FC, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import { routes } from "../../../routes";
import {
  Button,
  Div,
  Group,
  Panel,
  PanelHeader,
  Text,
  View,
} from "@vkontakte/vkui";
import { panelNames } from "../../../const/panel-names";
import { useUser } from "../../../hooks/use-user";
import { useProfileBtnStore } from "../../../store/profileBtnStore";
import { useQuestions } from "../../../hooks/use-questions";
import Alien from "../../alien/Alien";
import NotificationCell from "../../notification-cell/NotificationCell";

const NoMoreQuestionsView: FC<{ id: string }> = ({ id }) => {
  const navigate = useNavigate();

  let [vk_profile_id, setIsProfileBtnActive] = useProfileBtnStore((state) => [
    state.vk_profile_id,
    state.setIsProfileBtnActive,
  ]);
  const { user: otherUser } = useUser(vk_profile_id);
  const { questions } = useQuestions({ authorVkId: vk_profile_id });

  useEffect(() => {
    setIsProfileBtnActive(false);
  }, [setIsProfileBtnActive]);

  let questionsCounter = {
    count: 0,
    answered: 0,
  };

  if (questions) {
    questionsCounter.count = questions.length;
    questionsCounter.answered = questions.filter((q) => q.isAnswered).length;
  }
  const isAllQuestionsAnswered =
    questionsCounter.count === questionsCounter.answered &&
    questionsCounter.count > 0;

  const goToOnboarding = () => {
    setIsProfileBtnActive(false);
    navigate(routes.onboarding_1);
  };
  return (
    <View id={id} activePanel={id}>
      <Panel id={id}>
        <PanelHeader>{panelNames["404"]}</PanelHeader>
        <Group>
          {isAllQuestionsAnswered ? (
            <Text weight={"2"} className={"text-center py-3"}>
              –í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã,
              <br /> –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–¥–∞–ª {otherUser?.name}! üéâ
            </Text>
          ) : (
            <Text weight={"2"} className={"text-center py-3"}>
              <Alien /> –ù–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –±–æ–ª—å—à–µ –Ω–µ—Ç <Alien />
            </Text>
          )}
        </Group>
        <Group>
          <Text weight={"2"} className={"text-center py-3"}>
            –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –º–æ–∂–µ—Ç –≤–∞—Å —É–≤–µ–¥–æ–º–∏—Ç—å, –∫–æ–≥–¥–∞ {otherUser?.name || "–∫—Ç–æ-—Ç–æ"}{" "}
            –æ—Ç–≤–µ—Ç–∏—Ç –≤–∞–º
          </Text>
          <NotificationCell />
        </Group>
        <Group>
          <Text weight={"2"} className={"text-center py-3"}>
            –í—ã —Ç–æ–∂–µ –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –æ —Å–≤–æ–µ–º –ø—Ä–æ—Ñ–∏–ª–µ –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç—ã
          </Text>
          <Div>
            <Button size={"l"} onClick={goToOnboarding} stretched>
              –ß—Ç–æ —ç—Ç–æ –∑–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ?
            </Button>
          </Div>
        </Group>
      </Panel>
    </View>
  );
};

export default NoMoreQuestionsView;
